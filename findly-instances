#!/bin/bash

function show_help() {
  echo "\
Usage: $(cmd) INSTANCE_NAME
       $(cmd) --TAG_NAME TAG_VALUE

Find EC2 instances by tag values and show private ip address. Instances are
matched if they contain the given tag value. If no tag name is specified then
'Name' tag is used.

AWS CLI and JQ are required. Set default AWS CLI profile or environment
variables to control AWS credentials."
}

function cmd() {
  basename "$0"
}

function get_instances() {
  aws ec2 describe-instances \
    --filters "Name=tag:${tag_name},Values=*${tag_value}*"
}

function normalize_json() {
  jq -c '.Reservations[] | .Instances[] |
    {
      id: .InstanceId,
      ip: .PrivateIpAddress,
      name: ((.Tags[] | select(.Key == "Name")) // {}) | .Value,
      state: .State.Name
    }'
}

format_string="%-7s %-11s %-15s %s\n"

function format_line() {
  # shellcheck disable=SC2059
  printf "${format_string}" \
    "$(echo "$1" | jq -r .state)" \
    "$(echo "$1" | jq -r .id)" \
    "$(echo "$1" | jq -r .ip)" \
    "$(echo "$1" | jq -r .name)"
}

function format_output() {
  # shellcheck disable=SC2059
  printf "${format_string}" "State" "Id" "Private IP" "Name"
  while read line; do
    format_line "$line"
  done
}

case $1 in
  --*)
    tag_name="${1#--}"
    shift
  ;;
  -h)
    show_help
    exit
  ;;
  *)
    tag_name="Name"
  ;;
esac

tag_value="${1:-*}"

get_instances | normalize_json | format_output
